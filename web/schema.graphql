type Movie {
  movieEdge: MovieEdge
  error: String
  id: String!
  title: String!
  genre: String!
}

type Node {
  id: String!
  title: String!
  genre: String!
}

type MovieEdge {
  node: Node
}

type IMovieEdge {
  node: Node
  cursor: String
}

input CreateMovieInput {
  title: String!
  genre: String!
}

input DeleteMovieInput {
  id: String!
}

input LoginInput {
  email: String!
  password: String!
}

input RegisterUserInput {
  name: String!
  email: String!
  password: String!
}

type Mutation {
  CreateMovie(input: CreateMovieInput): Movie
  DeleteMovie(input: DeleteMovieInput): DeleteMovie
  LoginMutation(input: LoginInput): LoginOrRegister
  RegisterUserMutation(input: RegisterUserInput): LoginOrRegister
}

type Query {
  movies: Movies
}

type LoginOrRegister {
  token: String
  me: User
  error: String
}

type User {
  id: String
  name: String
  email: String
}

type DeleteMovie {
  error: String
}

type Movies {
  edges: [IMovieEdge]
  pageInfo: PageInfo
}

type PageInfo {
  hasNextPage: String
  hasPreviousPage: String
  startCursor: String
  endCursor: String
}
